import 'dart:convert';

import 'package:eshop/apiModel/apimodel.dart';
import 'package:eshop/bloc/blocstate.dart';
import 'package:eshop/bloc/bloc.dart';
import 'package:eshop/bloc/blocevent.dart';
import 'package:eshop/cart.dart';
import 'package:eshop/categorylist.dart';
import 'package:eshop/constant/apiservice.dart';
import 'package:eshop/constant/app_color.dart';
import 'package:eshop/reusable.dart/productpage.dart';
import 'package:eshop/reusable.dart/reusable_widget.dart';
import 'package:flutter/material.dart';

import 'package:carousel_slider/carousel_slider.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:http/http.dart' as http;

class Home extends StatefulWidget {
  const Home({super.key});

  @override
  State<Home> createState() => _Screen2State();
}

// List<Discover> game = [];

class _Screen2State extends State<Home> {
  Apiservice apiservice = Apiservice();
  @override
  void initState() {
    // apiservice.productApi();
    apiservice.fetchCategories();
    fetchCategories();
    productApi();
    // apiservice.smartphone();
    // apiservice.productApi1();
    context.read<productbloc>().add(Productapi());
    // setState(() {});
    super.initState();
  }

  Autogenerated aks = Autogenerated();
  String query = '';
  Future api(String query) async {
    try {
      print("step1");
      final uri = "https://dummyjson.com/products/search?q=${query}";
      final response = await http.get(Uri.parse(uri));
      final ak = jsonDecode(response.body);
      print("step2");
      if (response.statusCode == 200) {
        // Autogenerated aks = Autogenerated();
        final jsonData = Autogenerated.fromJson(ak);
        aks = jsonData;
        // searchs = ak['products'][1];

        // aks = jsonData;g
        print("step3");
        List products = ak['products'];
        // print("products>>>$products");
        setState(() {});
        return products.map((json) => Products.fromJson(json)).toList();
      } else {
        throw Exception('Failed to load search results');
      }
    } catch (e) {
      print("error>>$e");
    }
  }

  void searchProducts(String query) async {
    setState(() => _isLoading = true);
    try {
      List<Products> results = await api(query);
      print("resultt>>$results");
      setState(() {
        _products = results;
        print("_______pto___${_products}");
        _isLoading = false;
      });
    } catch (e) {
      print('Search error: $e');
      setState(() => _isLoading = false);
    }
  }

  List<Products> _products = [];
  bool _isLoading = false;
  final FocusNode _focusNode = FocusNode();

  @override
  void dispose() {
    searchcontroll.text;
    _focusNode.dispose();
    super.dispose();
  }

  List category1 = [];
  List<Products> category = [];
  Future productApi() async {
    try {
      String api = 'https://dummyjson.com/products?sortBy=title&order=asc';

      final uri = Uri.parse(api);
      final response = await http.get(uri);
      if (response.statusCode == 200) {
        final jsonData = jsonDecode(response.body);

        if (jsonData['products'] == null) {
          print("Key 'products' not found in JSON!");
          // return;
        } else {
          print("not working");
        }

        final List<dynamic> productList = jsonData['products'];

        category = productList.map((item) => Products.fromJson(item)).toList();

        setState(() {});
        return category;
      }
    } catch (e) {
      print("error>>$e");
    }
    throw '';
  }

  TextEditingController searchcontroll = SearchController();
  Future fetchCategories() async {
    final response = await http.get(
      Uri.parse('https://dummyjson.com/products/category-list'),
    );

    if (response.statusCode == 200) {
      final List<dynamic> jsonData = jsonDecode(response.body);

      CategoryModel categoryModel = CategoryModel.fromJson(jsonData);
      category1 = categoryModel.categories;
      // print("categ")
      setState(() {});
      return category1;
    } else {
      throw Exception('Failed to load categories');
    }
  }

  @override
  Widget build(BuildContext context) {
    return SafeArea(
      child: Scaffold(
        appBar: AppBar(
          elevation: 0,
          leadingWidth: 100,
          actions: [
            IconButton(
              onPressed: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => Cart()),
                );
              },
              icon: Icon(Icons.shopping_cart_outlined, color: Colors.white),
            ),
          ],

          leading: CircleAvatar(
            radius: 10,
            child: IconButton(
              iconSize: 40,
              color: Colors.black,
              onPressed: () {},
              icon: Icon(Icons.person_pin),
            ),
          ),

          title: Container(
            child: Text(
              "Eshop",
              style: GoogleFonts.poppins(
                fontStyle: FontStyle.normal,
                fontSize: 24,

                fontWeight: FontWeight.w700,
                color: Colors.white,
              ),
            ),
          ),
          backgroundColor: const Color.fromRGBO(24, 22, 35, 1),
        ),

        backgroundColor: Color.fromRGBO(24, 22, 35, 1),
        body: category.isEmpty
            ? Center(child: CircularProgressIndicator())
            : SingleChildScrollView(
                child: Column(
                  children: [
                    Padding(
                      padding: const EdgeInsets.all(16.0),
                      child: TextField(
                        onChanged: searchProducts,
                        controller: searchcontroll,

                        decoration: InputDecoration(
                          hintText: 'Search Product',

                          filled: true,
                          fillColor: Colors.grey[200],
                          contentPadding: EdgeInsets.symmetric(
                            vertical: 16,
                            horizontal: 20,
                          ),
                          border: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(
                              16,
                            ), // âœ… Rounded border
                            borderSide: BorderSide.none,
                          ),
                        ),
                      ),
                    ),

                    searchcontroll.text != ""
                        ? SizedBox(
                            width: double.infinity,
                            height: 400,
                            child: ListView.builder(
                              itemCount: searchcontroll.text == ""
                                  ? 0
                                  : _products.length,
                              itemBuilder: (context, index) {
                                final item = _products[index];
                                return GestureDetector(
                                  onTap: () {
                                    FocusScope.of(context).unfocus();
                                    searchcontroll.clear();
                                    Navigator.push(
                                      context,
                                      MaterialPageRoute(
                                        builder: (context) =>
                                            Productpage(item: item),
                                      ),
                                    );
                                  },
                                  child: Container(
                                    height: 30,
                                    color: Colors.white,
                                    child: Text(
                                      "${_products[index].title.toString()}",
                                      style: TextStyle(color: Colors.black),
                                    ),
                                  ),
                                );
                              },
                            ),
                          )
                        : SingleChildScrollView(
                            scrollDirection: Axis.vertical,
                            child: Container(
                              padding: EdgeInsets.only(
                                right: 5,
                                left: 7,
                                top: 10,
                              ),
                              color: Color.fromRGBO(24, 22, 35, 1),
                              child: SingleChildScrollView(
                                scrollDirection: Axis.vertical,
                                child: Column(
                                  children: [
                                    CircleAvatar(radius: 0),

                                    // SectionHeader(
                                    //   imagePath: 'images/discover.png',
                                    //   title: "Discover",
                                    // ),
                                    SectionHeader(title: 'Category'),

                                    Container(
                                      // width: 200,
                                      height: 40,
                                      child: ListView.builder(
                                        scrollDirection: Axis.horizontal,
                                        itemCount: category1.length,
                                        itemBuilder: (context, index) {
                                          final item = category1[index];

                                          return GestureDetector(
                                            onTap: () {
                                              FocusScope.of(context).unfocus();
                                              searchcontroll.clear();
                                              Navigator.push(
                                                context,
                                                MaterialPageRoute(
                                                  builder: (context) =>
                                                      ProductScreen(
                                                        categoryName: item,
                                                      ),
                                                ),
                                              );
                                            },
                                            child: Container(
                                              // width: 100,
                                              decoration: BoxDecoration(
                                                image: DecorationImage(
                                                  image: NetworkImage(
                                                    category[index].thumbnail ??
                                                        "".toString(),
                                                  ),
                                                  fit: BoxFit.cover,
                                                ),
                                                color: Colors.white,
                                                borderRadius:
                                                    BorderRadius.circular(5),
                                              ),
                                              margin: EdgeInsets.only(
                                                left: 10,
                                                right: 10,
                                              ),
                                              padding: EdgeInsets.only(
                                                left: 10,
                                                right: 10,
                                              ),

                                              child: Center(
                                                child: Text(
                                                  item.toString(),
                                                  style: GoogleFonts.poppins(
                                                    // ignore: deprecated_member_use
                                                    backgroundColor: Colors
                                                        .black
                                                        .withOpacity(0.3),

                                                    fontStyle: FontStyle.normal,
                                                    fontSize: 18,
                                                    color: Colors.white,

                                                    fontWeight: FontWeight.w400,
                                                  ),
                                                ),
                                              ),
                                            ),
                                          );
                                        },
                                      ),
                                    ),

                                    SectionHeader(title: 'Favourite'),
                                    Container(
                                      margin: EdgeInsets.only(
                                        left: 5,
                                        right: 5,
                                        top: 5,
                                      ),
                                      // color: Colors.amber,
                                      child: CarouselSlider(
                                        items: [
                                          FutureBuilder(
                                            future: apiservice.productApi(),
                                            builder:
                                                (
                                                  BuildContext context,
                                                  AsyncSnapshot snapshot,
                                                ) {
                                                  if (snapshot
                                                          .connectionState ==
                                                      ConnectionState.waiting) {
                                                    return Center(
                                                      child:
                                                          CircularProgressIndicator(),
                                                    );
                                                  } else if (snapshot
                                                      .hasError) {
                                                    return Center(
                                                      child: Text(
                                                        "Error: ${snapshot.error}",
                                                      ),
                                                    ); // <-- show the error
                                                  } else if (snapshot.hasData) {
                                                    final products =
                                                        snapshot.data!;
                                                    return ListView.builder(
                                                      scrollDirection:
                                                          Axis.horizontal,
                                                      itemCount:
                                                          products.length,
                                                      itemBuilder:
                                                          (context, index) {
                                                            return DiscoverCard(
                                                              item:
                                                                  products[index],
                                                            );
                                                          },
                                                    );
                                                  } else {
                                                    return Center(
                                                      child: Text(
                                                        "No data found",
                                                      ),
                                                    );
                                                  }
                                                },
                                          ),
                                        ],
                                        options: CarouselOptions(
                                          height: 250,
                                          viewportFraction: 1.3,
                                          initialPage: 0,
                                          enableInfiniteScroll: true,
                                          autoPlay: true,
                                          autoPlayInterval: Duration(
                                            seconds: 3,
                                          ),
                                          autoPlayAnimationDuration: Duration(
                                            milliseconds: 800,
                                          ),
                                          // enlargeCenterPage: true,
                                          enlargeFactor: 0.2,
                                          scrollDirection: Axis.horizontal,
                                        ),
                                      ),
                                    ),
                                    SizedBox(height: 10),
                                    SectionHeader(title: 'Smart Phones'),
                                    SizedBox(height: 8),
                                    // Inside your widget build method:
                                    BlocBuilder<productbloc, Productstate>(
                                      builder: (context, state) {
                                        print(
                                          "Current State: ${state.toString()}",
                                        );
                                        if (state is Productinital) {
                                          return Center(
                                            child: CircularProgressIndicator(),
                                          );
                                        } else if (state is Productloaded) {
                                          final products = state.smartphone;
                                          return CarouselSlider.builder(
                                            itemCount: products.length,
                                            itemBuilder: (context, index, realIndex) {
                                              final item = products[index];
                                              return GestureDetector(
                                                onTap: () {
                                                  Navigator.push(
                                                    context,
                                                    PageRouteBuilder(
                                                      pageBuilder:
                                                          (
                                                            context,
                                                            animation,
                                                            secondaryAnimation,
                                                          ) => Productpage(
                                                            item: item,
                                                          ),
                                                      transitionsBuilder:
                                                          (
                                                            context,
                                                            animation,
                                                            secondaryAnimation,
                                                            child,
                                                          ) {
                                                            var begin =
                                                                const Offset(
                                                                  0.1,
                                                                  0.5,
                                                                );
                                                            var end =
                                                                Offset.zero;
                                                            var curve =
                                                                Curves.ease;

                                                            var tween =
                                                                Tween(
                                                                  begin: begin,
                                                                  end: end,
                                                                ).chain(
                                                                  CurveTween(
                                                                    curve:
                                                                        curve,
                                                                  ),
                                                                );

                                                            return SlideTransition(
                                                              position:
                                                                  animation
                                                                      .drive(
                                                                        tween,
                                                                      ),
                                                              child: child,
                                                            );
                                                          },
                                                    ),
                                                  );
                                                },

                                                child: Container(
                                                  // color: Colors.white,
                                                  width: 410,
                                                  height: 240,
                                                  padding: const EdgeInsets.all(
                                                    8,
                                                  ),
                                                  child: Stack(
                                                    children: [
                                                      ClipRRect(
                                                        borderRadius:
                                                            BorderRadius.circular(
                                                              24,
                                                            ),
                                                        child: Container(
                                                          width: 410,
                                                          height: 240,
                                                          color: Colors.white,
                                                          foregroundDecoration: const BoxDecoration(
                                                            gradient: LinearGradient(
                                                              colors: [
                                                                Colors.black,
                                                                Colors
                                                                    .transparent,
                                                                Colors
                                                                    .transparent,
                                                                Colors.black,
                                                              ],
                                                              begin: Alignment
                                                                  .topCenter,
                                                              end: Alignment
                                                                  .bottomCenter,
                                                              stops: [
                                                                0,
                                                                0.0,
                                                                0.5,
                                                                0.9,
                                                              ],
                                                            ),
                                                          ),
                                                          child: Image.network(
                                                            item.thumbnail ??
                                                                "",
                                                            // .toString() ??
                                                            fit: BoxFit.contain,
                                                          ),
                                                        ),
                                                      ),
                                                      // Positioned(
                                                      //   top: 16,
                                                      //   right: 16,
                                                      //   child: Image.asset("images/saved.png"),
                                                      // ),
                                                      Positioned(
                                                        bottom: 50,
                                                        left: 10,
                                                        child: Container(
                                                          width: 51,
                                                          height: 28,
                                                          decoration: BoxDecoration(
                                                            color: Colors.white
                                                                .withOpacity(
                                                                  0.5,
                                                                ),
                                                            borderRadius:
                                                                BorderRadius.circular(
                                                                  100,
                                                                ),
                                                          ),
                                                          child: Row(
                                                            mainAxisAlignment:
                                                                MainAxisAlignment
                                                                    .center,
                                                            children: [
                                                              Icon(
                                                                Icons.star,
                                                                color: Color(
                                                                  0xFFD9DB6D,
                                                                ),
                                                                size: 18,
                                                              ),
                                                              SizedBox(
                                                                width: 2,
                                                              ),
                                                              Expanded(
                                                                child: Text(
                                                                  item.rating
                                                                          ?.toString() ??
                                                                      "",
                                                                  style: TextStyle(
                                                                    color: Colors
                                                                        .white,
                                                                    fontSize:
                                                                        12,
                                                                  ),
                                                                ),
                                                              ),
                                                            ],
                                                          ),
                                                        ),
                                                      ),
                                                      Positioned(
                                                        bottom: 10,
                                                        left: 10,
                                                        right: 8,
                                                        child: Column(
                                                          crossAxisAlignment:
                                                              CrossAxisAlignment
                                                                  .start,
                                                          children: [
                                                            Text(
                                                              item.brand
                                                                      ?.toString() ??
                                                                  "brand",

                                                              overflow:
                                                                  TextOverflow
                                                                      .ellipsis,
                                                              style: GoogleFonts.poppins(
                                                                color:
                                                                    const Color(
                                                                      0xFFE5E5E8,
                                                                    ),
                                                                fontWeight:
                                                                    FontWeight
                                                                        .w700,
                                                                fontSize: 16,
                                                              ),
                                                            ),
                                                          ],
                                                        ),
                                                      ),
                                                    ],
                                                  ),
                                                ),
                                              );
                                            },
                                            options: CarouselOptions(
                                              height: 260,
                                              autoPlay: true,
                                              viewportFraction: 01.0,
                                              enableInfiniteScroll: true,
                                              // enlargeCenterPage: true,
                                            ),
                                          );
                                        } else if (state is Producterror) {
                                          return Center(
                                            child: Text(
                                              "Error: ${state.error}",
                                              style: TextStyle(
                                                color: Colors.white,
                                              ),
                                            ),
                                          );
                                        } else {
                                          return Center(
                                            child: Text(
                                              "No data",
                                              style: TextStyle(
                                                color: Colors.white,
                                              ),
                                            ),
                                          );
                                        }
                                      },
                                    ),

                                    SizedBox(height: 10),
                                    Text(
                                      "All product",
                                      style: GoogleFonts.poppins(
                                        color: const Color(0xFFE5E5E8),
                                        fontWeight: FontWeight.w500,
                                        fontSize: 24,
                                      ),
                                    ),
                                    BlocBuilder<productbloc, Productstate>(
                                      builder: (context, state) {
                                        if (state is CategoryError) {
                                          return Container(
                                            child: Text(
                                              state.error.toString(),
                                              style: TextStyle(
                                                color: Colors.white,
                                              ),
                                            ),
                                          );
                                        } else if (state is Productloaded) {
                                          return ListView.builder(
                                            shrinkWrap: true,
                                            physics:
                                                NeverScrollableScrollPhysics(),
                                            itemCount: state.category.length,
                                            itemBuilder: (context, index) {
                                              // int random = Random(5) as int;
                                              final item =
                                                  state.category[index];

                                              return InkWell(
                                                onTap: () {
                                                  FocusScope.of(
                                                    context,
                                                  ).unfocus();
                                                  Navigator.push(
                                                    context,
                                                    PageRouteBuilder(
                                                      pageBuilder:
                                                          (
                                                            context,
                                                            animation,
                                                            secondaryAnimation,
                                                          ) => Productpage(
                                                            item: item,
                                                          ),
                                                      transitionsBuilder:
                                                          (
                                                            context,
                                                            animation,
                                                            secondaryAnimation,
                                                            child,
                                                          ) {
                                                            var begin =
                                                                const Offset(
                                                                  0.1,
                                                                  0.5,
                                                                );
                                                            var end =
                                                                Offset.zero;
                                                            var curve =
                                                                Curves.ease;

                                                            var tween =
                                                                Tween(
                                                                  begin: begin,
                                                                  end: end,
                                                                ).chain(
                                                                  CurveTween(
                                                                    curve:
                                                                        curve,
                                                                  ),
                                                                );

                                                            return SlideTransition(
                                                              position:
                                                                  animation
                                                                      .drive(
                                                                        tween,
                                                                      ),
                                                              child: child,
                                                            );
                                                          },
                                                    ),
                                                  );
                                                },
                                                child: Container(
                                                  margin: EdgeInsets.all(16),
                                                  color: AppColors.background,
                                                  child: Row(
                                                    crossAxisAlignment:
                                                        CrossAxisAlignment
                                                            .start,
                                                    mainAxisAlignment:
                                                        MainAxisAlignment.start,
                                                    children: [
                                                      Container(
                                                        color: Colors.white,
                                                        child: Image(
                                                          width: 150,
                                                          fit: BoxFit.cover,
                                                          image: NetworkImage(
                                                            item.thumbnail ??
                                                                "",
                                                          ),
                                                        ),
                                                      ),

                                                      Expanded(
                                                        child: Container(
                                                          padding:
                                                              EdgeInsets.all(8),
                                                          child: Column(
                                                            crossAxisAlignment:
                                                                CrossAxisAlignment
                                                                    .start,
                                                            children: [
                                                              Text(
                                                                item.title
                                                                    .toString(),
                                                                style: GoogleFonts.poppins(
                                                                  color: const Color(
                                                                    0xFFE5E5E8,
                                                                  ),
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w500,
                                                                  fontSize: 14,
                                                                ),
                                                              ),
                                                              SizedBox(
                                                                height: 5,
                                                              ),
                                                              CustomStarRating(
                                                                rating: item
                                                                    .rating!,
                                                              ),
                                                              SizedBox(
                                                                height: 5,
                                                              ),
                                                              Container(
                                                                child: Row(
                                                                  children: [
                                                                    Icon(
                                                                      Icons
                                                                          .arrow_downward_sharp,
                                                                      color: Colors
                                                                          .green,
                                                                    ),
                                                                    Text(
                                                                      " ${item.discountPercentage ?? ""}%",
                                                                      style: GoogleFonts.poppins(
                                                                        fontSize:
                                                                            18,
                                                                        fontWeight:
                                                                            FontWeight.w400,
                                                                        color: Colors
                                                                            .green,
                                                                      ),
                                                                    ),
                                                                    SizedBox(
                                                                      width: 5,
                                                                    ),
                                                                    Expanded(
                                                                      child: Text(
                                                                        overflow:
                                                                            TextOverflow.ellipsis,
                                                                        "\$${item.price! * 100}",
                                                                        style: GoogleFonts.poppins(
                                                                          fontStyle:
                                                                              FontStyle.normal,
                                                                          fontSize:
                                                                              18,
                                                                          decoration:
                                                                              TextDecoration.lineThrough,
                                                                          decorationColor:
                                                                              Colors.white,
                                                                          fontWeight:
                                                                              FontWeight.w400,
                                                                          color:
                                                                              AppColors.unselectcolor,
                                                                        ),
                                                                      ),
                                                                    ),
                                                                    SizedBox(
                                                                      width: 5,
                                                                    ),
                                                                    Text(
                                                                      "\$${item.price ?? ""}",
                                                                      style: GoogleFonts.poppins(
                                                                        fontSize:
                                                                            18,
                                                                        fontWeight:
                                                                            FontWeight.w400,
                                                                        color: Colors
                                                                            .white,
                                                                      ),
                                                                    ),
                                                                  ],
                                                                ),
                                                              ),
                                                              SizedBox(
                                                                height: 5,
                                                              ),
                                                              Text(
                                                                "Stock: ${item.availabilityStatus ?? ""}",
                                                                style: GoogleFonts.poppins(
                                                                  fontSize: 14,
                                                                  fontWeight:
                                                                      FontWeight
                                                                          .w400,
                                                                  color: Colors
                                                                      .white,
                                                                ),
                                                              ),
                                                            ],
                                                          ),
                                                        ),
                                                      ),
                                                    ],
                                                  ),
                                                ),
                                              );
                                            },
                                          );
                                        }
                                        return Container();
                                      },
                                    ),
                                  ],
                                ),
                              ),
                            ),
                          ),
                  ],
                ),
              ),
      ),
    );
  }
}

class CustomStarRating extends StatelessWidget {
  final double rating; // e.g., 3.5

  CustomStarRating({required this.rating});

  @override
  Widget build(BuildContext context) {
    int fullStars = rating.floor();
    bool hasHalfStar = (rating - fullStars) >= 0.5;

    return Row(
      mainAxisSize: MainAxisSize.min,
      children: List.generate(5, (index) {
        if (index < fullStars) {
          return Icon(Icons.star, color: Colors.amber);
        } else if (index == fullStars && hasHalfStar) {
          return Icon(Icons.star_half, color: Colors.amber);
        } else {
          return Icon(Icons.star_border, color: Colors.grey);
        }
      }),
    );
  }
}
